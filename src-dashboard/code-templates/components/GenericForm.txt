********* Schema hook *********
import { GenericFormSchemaType } from "shared/types/Forms.type";

const useSchema = (): GenericFormSchemaType => {
    return {
        schema: {
            type: "object",
            properties: {
                fieldName: {
                    type: "string",
                    title: "Field title",
                },
            },
        },

        uiSchema: {},
    };
};

export default useSchema;



********* Type *********
export type FormDataType = {
    fieldName: string;
};



********* Constant *********
export const defaultFormData: FormDataType = {
    fieldName: "",
};



********* Component *********
const schema = useSchema();

const { displaySuccessAlert, displayFailureAlert } = useDisplayAlert();

const { mutateAsync: doAction, isLoading } = useGenericMutation({
    method: "POST",
    endpointPath: ApiRoutes.route,
});

const handleSubmit = (formData: FormDataType) => {
    doAction(formData)
        .then((response) => {
            displaySuccessAlert(response?.data?.message);
        })
        .catch(() => displayFailureAlert());
};

<GenericForm
    schema={schema}
    defaultValue={{}}
    onSubmit={handleSubmit}
>
    <GenericButton type="submit" disabled={isLoading}>
        Submit
    </GenericButton>
</GenericForm>